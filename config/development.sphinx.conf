
indexer
{
}

searchd
{
  listen = 127.0.0.1:9306:mysql41
  log = /www/projects/movie_management/log/development.searchd.log
  query_log = /www/projects/movie_management/log/development.searchd.query.log
  pid_file = /www/projects/movie_management/log/development.sphinx.pid
  workers = threads
  binlog_path = /www/projects/movie_management/tmp/binlog/development
}

source movie_core_0
{
  type = mysql
  sql_host = localhost
  sql_user = root
  sql_pass =
  sql_db = movie_management_development
  sql_sock = /var/run/mysqld/mysqld.sock
  sql_query_pre = SET TIME_ZONE = '+0:00'
  sql_query_pre = SET NAMES utf8
  sql_query = SELECT SQL_NO_CACHE `movies`.`id` * 2 + 0 AS `id`, `movies`.`title` AS `title`, `movies`.`description` AS `description`, GROUP_CONCAT(DISTINCT `actors`.`name` SEPARATOR ' ') AS `actors`, `movies`.`genre` AS `genre`, `movies`.`id` AS `sphinx_internal_id`, 'Movie' AS `sphinx_internal_class`, 0 AS `sphinx_deleted`, UNIX_TIMESTAMP(`movies`.`release_date`) AS `release_date`, `movies`.`approved` AS `approved`, `movies`.`featured` AS `featured`, UNIX_TIMESTAMP(`movies`.`updated_at`) AS `updated_at` FROM `movies` LEFT OUTER JOIN `roles` ON `roles`.`movie_id` = `movies`.`id` LEFT OUTER JOIN `actors` ON `actors`.`id` = `roles`.`actor_id` WHERE (`movies`.`id` BETWEEN $start AND $end) GROUP BY `movies`.`id`, `movies`.`title`, `movies`.`description`, `movies`.`genre`, `movies`.`id`, `movies`.`release_date`, `movies`.`approved`, `movies`.`featured`, `movies`.`updated_at`  ORDER BY NULL
  sql_query_range = SELECT IFNULL(MIN(`movies`.`id`), 1), IFNULL(MAX(`movies`.`id`), 1) FROM `movies`
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_bool = approved
  sql_attr_bool = featured
  sql_attr_timestamp = release_date
  sql_attr_timestamp = updated_at
  sql_attr_string = sphinx_internal_class
  sql_field_string = title
}

index movie_core
{
  type = plain
  path = /www/projects/movie_management/db/sphinx/development/movie_core
  docinfo = extern
  source = movie_core_0
}

index movie
{
  type = distributed
  local = movie_core
}
